#!/usr/bin/env python
""" Simple server to automate chatter with github """

import yaml
import logging
import flask
import json

import chatter.bot

config=yaml.load(file('/var/lib/chatter/config.yaml','r'))
app = flask.Flask(__name__)
logging.basicConfig(filename=config['log_file'], level=logging.INFO)
logging.info("============================================================")

@app.route('/chatter/', methods=['GET','POST'])
def github_destination():
    if flask.request.method == 'GET':
        logging.info("Chattering! GET")
        return "Success", 200
    elif flask.request.method == 'POST':
        logging.info("Chattering! POST")
        payload = flask.request.get_json()
        event_type = flask.request.headers.get('X-Github-Event')
        logging.info("Event type is {}".format(event_type))
	issue = payload['issue']['number']
        logging.info("Received a comment on issue number {}".format(issue))
	if 'pull_request' in payload['issue']:
            logging.info("Issue is a pull request")
	logging.info("Comment is {}".format(payload['comment']['body']))
        return "Post acknowledged",204

@app.route('/chatter/pr/<num>')
def check_pr(num=None):
    token = config['github_auth_token']
    try:
        bot = chatter.bot.JenkinsBot(token)
        reviewed_by = bot.pr_reviewed_by(num)
    except RuntimeError:
        logging.exception()

    if reviewed_by is None:
        return "Pull request has not been reviewed"
    else:
        return "Pull request reviewed by @{}".format(reviewed_by['login'])
