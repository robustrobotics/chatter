#!/usr/bin/env python
""" Simple server to automate chatter with github """

import yaml
import logging
import flask

import chatter.bot

CONFIG = yaml.load(file('/var/lib/chatter/config.yaml', 'r'))
logging.basicConfig(filename=CONFIG['log_file'], level=logging.INFO)
logging.info("============================================================")

app = flask.Flask(__name__)

@app.route('/chatter/', methods=['GET', 'POST'])
def github_destination():
    """ Main API route handler """
    if flask.request.method == 'GET':
        logging.info("Chattering! GET")
        return "Success", 200
    elif flask.request.method == 'POST':
        payload = flask.request.get_json()
        event_type = flask.request.headers.get('X-Github-Event')
        if event_type == 'issue_comment':
            if 'pull_request' not in payload['issue']:
                logging.info("Issue is not a pull request; nothing to do")
            else:
                # Check if code review is complete
                token = CONFIG['github_auth_token']
                issue = payload['issue']['number']
                try:
                    bot = chatter.bot.JenkinsBot(token, CONFIG['organization'],
                            CONFIG['repository'])
                    comment, sha = bot.pr_reviewed_by(issue)
                    if comment is not None:
                        description = "Pull request reviewed by @{}".format(
                                comment['user']['login'])
                        logging.info(description)
                        status = {
                                'context': 'code_review',
                                'state': 'success',
                                'target_url': comment['html_url'],
                                'description': description}
                        bot.set_status(sha, status)

                except RuntimeError:
                    logging.exception("Error checking PR status")
        elif event_type == 'pull_request':
            logging.info("New pull request.")
        else:
            logging.info("Unexpected event type {}".format(event_type))
        return "Post acknowledged", 204

@app.route('/chatter/pr/<num>')
def check_pr(num=None):
    """ Check the status of a pull request """
    token = CONFIG['github_auth_token']
    try:
        bot = chatter.bot.JenkinsBot(token, CONFIG['organization'],
                CONFIG['repository'])
        comment, _ = bot.pr_reviewed_by(num)
    except RuntimeError:
        logging.exception("Error fetching comments")

    if comment is None:
        return "Pull request has not been reviewed"
    else:
        return "Pull request reviewed by @{}".format(comment['user']['login'])
